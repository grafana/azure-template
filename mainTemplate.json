{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    },
    "sshUsername": {
      "type": "string",
      "metadata": {
        "description": "These credentials can be used to remotely access the cluster."
      }
    },
    "sshPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "These credentials can be used to remotely access the cluster."
      }
    },
    "sshPublicKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "SSH key for the Virtual Machine."
      }
    },
    "grafanaAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "These credentials give access to the Grafana admin account."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location where resources will be provisioned. By default, the template deploys the resources to the same location as the resource group. If specified, must be a valid Azure location, e.g. 'australiasoutheast'."
      }
    },
    "namespace": {
      "type": "string",
      "defaultValue": "grafana",
      "metadata": {
        "description": "Name of the Virtual Machine."
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the Grafana instance."
      }
    },
    "publicIPAddressNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Specifies whether to use new or existing Virtual Network."
      }
    },
    "publicIPAddressExistingRGName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of resource group of existing Virtual Network (if applicable)."
      }
    },
    "domainNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for domain name to access Grafana, on the following format: {prefix}.{location}.cloudapp.azure.com."
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage account name. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."
      },
      "maxLength": 24
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Storage account SKU. Standard_LRS, Standard_GRS, Standard_RAGRS, Standard_ZRS, Premium_LRS, Premium_ZRS, Standard_GZRS, Standard_RAGZRS."
      },
      "defaultValue": "Standard_LRS"
    },
    "storageAccountNewOrExisting": {
      "type": "string",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Specifies whether to use new or existing Storage Group."
      },
      "defaultValue": "new"
    },
    "storageAccountExistingRGName": {
      "type": "string",
      "metadata": {
        "description": "Name of resource group of existing Storage Group (if applicable)."
      },
      "defaultValue": "[resourceGroup().name]"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "Size of the vm to use for the grafana instance."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network that the consumer wants to use."
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Specifies whether to use new or existing Virtual Network."
      }
    },
    "virtualNetworkExistingRGName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of resource group of existing Virtual Network (if applicable)."
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Virtual network address."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "grafanaSubnet",
      "metadata": {
        "description": "Subnet for Grafana."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Grafana subnet CIDR."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Base URL for Marketplace."
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "installScripts": [
      "[uri(parameters('_artifactsLocation'), concat('scripts/install-grafana.sh', parameters('_artifactsLocationSasToken')))]"
    ],
    "installOpts": "[concat('-A ', parameters('grafanaAdminPassword'))]",
    "nicName": "[concat(parameters('namespace'), '-nic')]",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "publicIPAddressId": "[resourceId(parameters('publicIPAddressExistingRGName'), 'Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
    "storageAccountID": "[resourceId(parameters('storageAccountExistingRGName'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
    "passwordAuth": {
      "computerName": "[concat(parameters('namespace'), '-vm')]",
      "adminUsername": "[parameters('sshUsername')]",
      "adminPassword": "[parameters('sshPassword')]"
    },
    "sshAuth": {
      "computerName": "[concat(parameters('namespace'), '-vm')]",
      "adminUsername": "[parameters('sshUsername')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('sshUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('sshPublicKey')]"
            }
          ]
        }
      }
    },
    "OSDiskName": "concat(parameters('namespace'), '-disk')",
    "securityGroupName": "[concat(parameters('namespace'), '-nsg')]"
  },
  "resources": [
    {
      "apiVersion": "2019-10-01",
      "name": "pid-b88530aa-30f9-40ea-b09f-14f59acd3a73-partnercenter",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
      "name": "[parameters('virtualNetworkName')]",
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('storageAccountNewOrExisting'), 'new')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "condition": "[equals(parameters('publicIPAddressNewOrExisting'), 'new')]",
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('domainNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('securityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "Allows inbound SSH traffic.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Grafana",
            "properties": {
              "description": "Allows inbound Grafana HTTP traffic.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3000",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(parameters('namespace'), '-ip-config')]",
            "properties": {
              "privateIPAllocationMethod": "[variables('publicIPAddressType')]",
              "publicIPAddress": {
                "id": "[variables('publicIPAddressId')]"
              },
              "subnet": {
                "id": "[resourceId(parameters('virtualNetworkExistingRGName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('namespace')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
      ],
      "properties": {
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(variables('storageAccountID')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'), '/', variables('OSDiskName'), '.vhd')]"
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": "[if(equals(parameters('authenticationType'), 'password'), variables('passwordAuth'), variables('sshAuth'))]",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "installGrafana",
          "apiVersion": "2019-07-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('namespace'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.1",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": "[variables('installScripts')]"
            },
            "protectedSettings": {
              "commandToExecute": "[concat('bash install-grafana.sh ', variables('installOpts'))]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {}
}
